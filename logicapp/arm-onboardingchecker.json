{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "metadata": {
                "description": "Name of the logic app."
            }
        },
        "logicAppLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location of the logic app."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('logicAppName')]",
            "apiVersion": "2016-06-01",
            "location": "[parameters('logicAppLocation')]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$authentication": {
                            "defaultValue": {},
                            "type": "SecureObject"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "properties": {
                                        "upn": {
                                            "type": "string"
                                        },
                                        "userAccessToken": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "userAccessToken",
                                        "upn"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Check_if_Internal_User": {
                            "actions": {
                                "GetDomains": {
                                    "inputs": {
                                        "headers": {
                                            "Accept": "application/json;odata.metadata=minimal",
                                            "Authorization": "Bearer @{triggerBody()['userAccessToken']}",
                                            "Content-Type": "application/json;odata.metadata=minimal"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/beta/domains?$Select=id"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                },
                                "Set_variable_ArrayCommonDomain": {
                                    "inputs": {
                                        "name": "ArrayCommonDomain",
                                        "value": "@intersection(body('GetDomains').value, variables('ArrayUserDomain'))"
                                    },
                                    "runAfter": {
                                        "GetDomains": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "runAfter": {
                                "Initialize_ArrayCommonDomain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "If_Legitimate_User": {
                            "actions": {
                                "Check_and_Send_B2B_User_Status": {
                                    "actions": {
                                        "GetUser": {
                                            "inputs": {
                                                "headers": {
                                                    "Accept": "application/json;odata.metadata=minimal",
                                                    "Authorization": "Bearer @{triggerBody()['userAccessToken']}",
                                                    "Content-Type": "application/json;odata.metadata=minimal"
                                                },
                                                "method": "GET",
                                                "uri": "https://graph.microsoft.com/beta/users?$filter=mail eq '@{triggerBody()['upn']}' or userPrincipalName eq '@{triggerBody()['upn']}' or startswith(userPrincipalName, '@{replace(triggerBody()['upn'], '@', '_')}') or otherMails/any(c:c+eq+'@{triggerBody()['upn']}')"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "If_user_exists": {
                                            "actions": {
                                                "Set_ExternalUserStatus": {
                                                    "inputs": {
                                                        "name": "ExternalUserStatus",
                                                        "value": "@{actionBody('GetUser').value[0].externalUserState}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                },
                                                "Switch": {
                                                    "cases": {
                                                        "Case": {
                                                            "actions": {
                                                                "SendPendingAcceptance": {
                                                                    "inputs": {
                                                                        "body": {
                                                                            "ConnectionName": "@{concat(substring(body('GetUser').value[0].userPrincipalName, 0, lastIndexOf(body('GetUser').value[0].userPrincipalName, '_')), replace(replace(substring(body('GetUser').value[0].userPrincipalName, 0, indexOf(body('GetUser').value[0].userPrincipalName, '#')), substring(body('GetUser').value[0].userPrincipalName, 0, lastIndexOf(body('GetUser').value[0].userPrincipalName, '_')), ''), '_', '@'))}",
                                                                            "Email": "@{triggerBody()['upn']}",
                                                                            "Status": "3"
                                                                        },
                                                                        "statusCode": 200
                                                                    },
                                                                    "kind": "Http",
                                                                    "runAfter": {},
                                                                    "type": "Response"
                                                                }
                                                            },
                                                            "case": "PendingAcceptance"
                                                        },
                                                        "Case_2": {
                                                            "actions": {
                                                                "SendAccepted": {
                                                                    "inputs": {
                                                                        "body": {
                                                                            "ConnectionName": "@{concat(substring(body('GetUser').value[0].userPrincipalName, 0, lastIndexOf(body('GetUser').value[0].userPrincipalName, '_')), replace(replace(substring(body('GetUser').value[0].userPrincipalName, 0, indexOf(body('GetUser').value[0].userPrincipalName, '#')), substring(body('GetUser').value[0].userPrincipalName, 0, lastIndexOf(body('GetUser').value[0].userPrincipalName, '_')), ''), '_', '@'))}",
                                                                            "Email": "@{triggerBody()['upn']}",
                                                                            "Status": "4"
                                                                        },
                                                                        "statusCode": 200
                                                                    },
                                                                    "kind": "Http",
                                                                    "runAfter": {},
                                                                    "type": "Response"
                                                                }
                                                            },
                                                            "case": "Accepted"
                                                        }
                                                    },
                                                    "default": {
                                                        "actions": {
                                                            "UndeterminedUser": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "Email": "@{triggerBody()?['upn']}",
                                                                        "Status": "0"
                                                                    },
                                                                    "statusCode": 200
                                                                },
                                                                "kind": "Http",
                                                                "runAfter": {},
                                                                "type": "Response"
                                                            }
                                                        }
                                                    },
                                                    "expression": "@variables('ExternalUserStatus')",
                                                    "runAfter": {
                                                        "Set_ExternalUserStatus": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Switch"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "SendUserNotExists": {
                                                        "inputs": {
                                                            "body": {
                                                                "ConnectionName": "@{triggerBody()['upn']}",
                                                                "Email": "@{triggerBody()['upn']}",
                                                                "Status": "2"
                                                            },
                                                            "statusCode": 200
                                                        },
                                                        "kind": "Http",
                                                        "runAfter": {},
                                                        "type": "Response"
                                                    }
                                                }
                                            },
                                            "expression": "@equals(empty(body('GetUser').value), false)",
                                            "runAfter": {
                                                "GetUser": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Scope"
                                }
                            },
                            "else": {
                                "actions": {
                                    "SendUserInternal": {
                                        "inputs": {
                                            "body": {
                                                "ConnectionName": "@{triggerBody()?['upn']}",
                                                "Email": "@{triggerBody()?['upn']}",
                                                "Status": "1"
                                            },
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {},
                                        "type": "Response"
                                    }
                                }
                            },
                            "expression": "@equals(length(variables('ArrayCommonDomain')), 0)",
                            "runAfter": {
                                "Check_if_Internal_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_ArrayCommonDomain": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ArrayCommonDomain",
                                        "type": "Array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_ArrayUserDomain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_ArrayUserDomain": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ArrayUserDomain",
                                        "type": "Array",
                                        "value": [
                                            {
                                                "id": "@{variables('UserDomain')}"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_userDomain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_ExternalUserStatus": {
                            "description": "InternalUser = 1, DoesNotExist = 2, InvitationPending = 3, InvitationAccepted = 4, Undetermined = 0",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExternalUserStatus",
                                        "type": "String"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_userDomain": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UserDomain",
                                        "type": "String",
                                        "value": "@{split(triggerBody()?['upn'], '@')[1]}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_ExternalUserStatus": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {},
                "runtimeConfiguration": {
                    "collections": {
                        "maximumItemCount": 100000
                    },
                    "performanceProfile": {
                        "throttles": {
                            "mode": "Medium"
                        }
                    }
                }
            }
        }
    ]
}